{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Investigating the Range as a Function of the Angle of Projection Motivation Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket. Theoretical Foundation To analyze projectile motion, we derive the governing equations from Newtonian mechanics. The horizontal and vertical components of motion are treated independently. Equations of motion: Horizontal displacement: \\(x = v_0 \\cos(\\theta) t\\) Vertical displacement: \\(y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2\\) Time of flight: \\(t_f = \\frac{2 v_0 \\sin(\\theta)}{g}\\) Maximum height: \\(H = \\frac{v_0^2 \\sin^2(\\theta)}{2g}\\) Range equation: \\(R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\) These equations highlight how variations in initial conditions lead to a family of solutions. Analysis of the Range We investigate how the horizontal range depends on the angle of projection: - The range equation shows that the maximum range occurs at \\(\\theta = 45^\\circ\\) . - Changes in initial velocity \\(v_0\\) proportionally affect the range. - Increasing gravitational acceleration \\(g\\) reduces the range. - The presence of air resistance alters the trajectory and range significantly. - For projectiles launched from an elevated height \\(h\\) , the range equation modifies to: $[ R = \\frac{v_0 \\cos(\\theta)}{g} \\left( v_0 \\sin(\\theta) + \\sqrt{v_0^2 \\sin^2(\\theta) + 2 g h} \\right) $] Practical Applications This model can be adapted to various real-world scenarios: - Projectile motion on uneven terrain : Adjusting for varying landing heights. - The effect of air resistance : Implementing drag force models to simulate realistic trajectories. - Applications in sports : Optimizing angles for long-distance throws and kicks. - Ballistics and defense applications : Predicting missile and artillery trajectories. - Astrodynamics : Understanding how gravitational variations affect projectile motion in different planetary environments. Advanced Implementation A Python script is developed to simulate projectile motion under more realistic conditions: - Generates plots of range versus angle of projection for different initial velocities. - Incorporates air resistance using a quadratic drag force model. - Uses numerical methods (e.g., Euler\u2019s method) to solve complex differential equations. Python Script Example import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def equations(t, y, g, Cd, rho, A, m): vx, vy = y[2], y[3] v = np.sqrt(vx**2 + vy**2) drag_x = -Cd * rho * A * v * vx / (2 * m) drag_y = -Cd * rho * A * v * vy / (2 * m) - g return [vx, vy, drag_x, drag_y] def projectile_motion(v0, theta, g=9.81, Cd=0.47, rho=1.225, A=0.01, m=0.145): theta_rad = np.radians(theta) y0 = [0, 0, v0 * np.cos(theta_rad), v0 * np.sin(theta_rad)] t_span = (0, 5) t_eval = np.linspace(0, 5, num=1000) sol = solve_ivp(equations, t_span, y0, t_eval=t_eval, args=(g, Cd, rho, A, m)) return sol.t, sol.y[0], sol.y[1] # Simulation for different angles angles = [30, 45, 60] v0 = 30 plt.figure(figsize=(8, 5)) for theta in angles: t, x, y = projectile_motion(v0, theta) plt.plot(x, y, label=f'\u03b8 = {theta}\u00b0') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Vertical Distance (m)') plt.title('Projectile Motion with Air Resistance') plt.legend() plt.grid() plt.show() colab Graphical Representation The above script generates a plot showing how air resistance affects projectile trajectories. The curves demonstrate how higher launch angles result in increased time of flight but reduced range due to air drag. Limitations and Further Considerations The idealized model assumes no air resistance and a flat terrain, which are unrealistic assumptions for many applications. The advanced model incorporates air resistance but still neglects factors such as wind, spin effects, and altitude variations. Future work can explore: 3D projectile motion (including spin and Magnus effect). Wind speed variations and their effects on trajectory. Planetary-specific simulations (e.g., projectile motion on Mars vs. Earth). Conclusion Projectile motion provides an insightful framework to explore fundamental physics principles. By analyzing the range as a function of projection angle, we gain a deeper understanding of how different parameters influence motion. The computational approach further enhances our ability to model and visualize these effects, bridging theoretical physics with real-world applications. Advanced numerical methods allow us to extend beyond simple analytical models, providing a richer and more accurate understanding of projectile dynamics.","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation","text":"To analyze projectile motion, we derive the governing equations from Newtonian mechanics. The horizontal and vertical components of motion are treated independently. Equations of motion: Horizontal displacement: \\(x = v_0 \\cos(\\theta) t\\) Vertical displacement: \\(y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2\\) Time of flight: \\(t_f = \\frac{2 v_0 \\sin(\\theta)}{g}\\) Maximum height: \\(H = \\frac{v_0^2 \\sin^2(\\theta)}{2g}\\) Range equation: \\(R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\) These equations highlight how variations in initial conditions lead to a family of solutions.","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#analysis-of-the-range","text":"We investigate how the horizontal range depends on the angle of projection: - The range equation shows that the maximum range occurs at \\(\\theta = 45^\\circ\\) . - Changes in initial velocity \\(v_0\\) proportionally affect the range. - Increasing gravitational acceleration \\(g\\) reduces the range. - The presence of air resistance alters the trajectory and range significantly. - For projectiles launched from an elevated height \\(h\\) , the range equation modifies to: $[ R = \\frac{v_0 \\cos(\\theta)}{g} \\left( v_0 \\sin(\\theta) + \\sqrt{v_0^2 \\sin^2(\\theta) + 2 g h} \\right) $]","title":"Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications","text":"This model can be adapted to various real-world scenarios: - Projectile motion on uneven terrain : Adjusting for varying landing heights. - The effect of air resistance : Implementing drag force models to simulate realistic trajectories. - Applications in sports : Optimizing angles for long-distance throws and kicks. - Ballistics and defense applications : Predicting missile and artillery trajectories. - Astrodynamics : Understanding how gravitational variations affect projectile motion in different planetary environments.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#advanced-implementation","text":"A Python script is developed to simulate projectile motion under more realistic conditions: - Generates plots of range versus angle of projection for different initial velocities. - Incorporates air resistance using a quadratic drag force model. - Uses numerical methods (e.g., Euler\u2019s method) to solve complex differential equations.","title":"Advanced Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-script-example","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def equations(t, y, g, Cd, rho, A, m): vx, vy = y[2], y[3] v = np.sqrt(vx**2 + vy**2) drag_x = -Cd * rho * A * v * vx / (2 * m) drag_y = -Cd * rho * A * v * vy / (2 * m) - g return [vx, vy, drag_x, drag_y] def projectile_motion(v0, theta, g=9.81, Cd=0.47, rho=1.225, A=0.01, m=0.145): theta_rad = np.radians(theta) y0 = [0, 0, v0 * np.cos(theta_rad), v0 * np.sin(theta_rad)] t_span = (0, 5) t_eval = np.linspace(0, 5, num=1000) sol = solve_ivp(equations, t_span, y0, t_eval=t_eval, args=(g, Cd, rho, A, m)) return sol.t, sol.y[0], sol.y[1] # Simulation for different angles angles = [30, 45, 60] v0 = 30 plt.figure(figsize=(8, 5)) for theta in angles: t, x, y = projectile_motion(v0, theta) plt.plot(x, y, label=f'\u03b8 = {theta}\u00b0') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Vertical Distance (m)') plt.title('Projectile Motion with Air Resistance') plt.legend() plt.grid() plt.show() colab","title":"Python Script Example"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#graphical-representation","text":"The above script generates a plot showing how air resistance affects projectile trajectories. The curves demonstrate how higher launch angles result in increased time of flight but reduced range due to air drag.","title":"Graphical Representation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations-and-further-considerations","text":"The idealized model assumes no air resistance and a flat terrain, which are unrealistic assumptions for many applications. The advanced model incorporates air resistance but still neglects factors such as wind, spin effects, and altitude variations. Future work can explore: 3D projectile motion (including spin and Magnus effect). Wind speed variations and their effects on trajectory. Planetary-specific simulations (e.g., projectile motion on Mars vs. Earth).","title":"Limitations and Further Considerations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"Projectile motion provides an insightful framework to explore fundamental physics principles. By analyzing the range as a function of projection angle, we gain a deeper understanding of how different parameters influence motion. The computational approach further enhances our ability to model and visualize these effects, bridging theoretical physics with real-world applications. Advanced numerical methods allow us to extend beyond simple analytical models, providing a richer and more accurate understanding of projectile dynamics.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Investigating the Dynamics of a Forced Damped Pendulum Motivation The forced damped pendulum is a fascinating example of nonlinear dynamics, exhibiting behavior that ranges from simple periodic motion to chaotic oscillations. This system is governed by the interplay of damping, restoring forces, and external periodic driving, making it a crucial model for understanding diverse physical and engineering systems. Applications include energy harvesting, mechanical resonance, and vibration control. Theoretical Foundation The equation governing a forced damped pendulum is given by: $[ \\frac{d^2\\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\omega_0^2 \\sin(\\theta) = A \\cos(\\Omega t) $] where: - \\(\\theta\\) is the angular displacement, - \\(\\beta\\) is the damping coefficient, - \\(\\omega_0^2 = g/L\\) is the natural frequency of the pendulum, - \\(A\\) is the amplitude of the external driving force, - \\(\\Omega\\) is the driving frequency. For small angles ( \\(\\theta \\approx \\sin(\\theta)\\) ), the equation simplifies to: $[ \\frac{d^2\\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\Omega t) $] This approximation allows us to analyze resonance and stability conditions. Analysis of Dynamics To explore the system's dynamics, we numerically solve the equation for various values of \\(\\beta\\) , \\(A\\) , and \\(\\Omega\\) . Key Features: Resonance : When \\(\\Omega \\approx \\omega_0\\) , the pendulum experiences maximum amplitude oscillations. Damping Effects : Higher \\(\\beta\\) leads to reduced oscillations and eventual stabilization. Chaotic Behavior : For large \\(A\\) and specific \\(\\Omega\\) , the pendulum exhibits sensitive dependence on initial conditions. Implementation A Python script is developed using the Runge-Kutta method to solve the differential equation numerically. The results are visualized using phase diagrams, Poincar\u00e9 sections, and bifurcation plots. Advanced Python Script with Animation import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation from scipy.integrate import solve_ivp from IPython.display import HTML # Define the equation of motion def forced_damped_pendulum(t, y, beta, omega0, A, Omega): theta, omega = y dtheta_dt = omega domega_dt = -beta * omega - omega0**2 * np.sin(theta) + A * np.cos(Omega * t) return [dtheta_dt, domega_dt] # Parameters beta = 0.5 # Damping coefficient omega0 = 1.0 # Natural frequency A = 1.2 # Driving amplitude Omega = 0.8 # Driving frequency t_span = (0, 50) t_eval = np.linspace(0, 50, 1000) # Initial conditions theta0 = 0.2 omega0_init = 0.0 sol = solve_ivp(forced_damped_pendulum, t_span, [theta0, omega0_init], t_eval=t_eval, args=(beta, omega0, A, Omega)) theta_vals = sol.y[0] length = 1.0 # Length of pendulum x_vals = length * np.sin(theta_vals) y_vals = -length * np.cos(theta_vals) fig, ax = plt.subplots(figsize=(5, 5)) ax.set_xlim(-1.2, 1.2) ax.set_ylim(-1.2, 1.2) ax.set_aspect('equal') ax.set_xticks([]) ax.set_yticks([]) ax.set_title('Forced Damped Pendulum Animation') line, = ax.plot([], [], 'o-', lw=2, markersize=10, markerfacecolor='red') def init(): line.set_data([], []) return line, def update(frame): line.set_data([0, x_vals[frame]], [0, y_vals[frame]]) return line, ani = animation.FuncAnimation(fig, update, frames=len(x_vals), init_func=init, interval=30, blit=True) HTML(ani.to_jshtml()) colab Advanced Visualizations Phase Portraits : Plot \\(\\omega\\) vs. \\(\\theta\\) to observe stability and attractors. Poincar\u00e9 Sections : Identify chaotic behavior by sampling at integer multiples of the driving period. Bifurcation Diagrams : Examine transitions from periodic to chaotic motion by varying parameters. Practical Applications Energy Harvesting : Understanding resonance conditions for maximizing energy extraction. Vibration Control : Engineering applications in bridges and buildings to mitigate oscillatory forces. Nonlinear Circuit Analysis : Electrical analogs using RLC circuits with periodic driving. Conclusion The forced damped pendulum is an excellent system for studying nonlinear dynamics, resonance, and chaos. By using numerical methods, we gain deeper insights into the effects of forcing and damping, bridging theoretical physics with real-world applications. Future Work Incorporating nonlinear damping effects. Studying the impact of non-periodic or stochastic driving forces. Extending analysis to coupled pendulum systems. ```","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#motivation","text":"The forced damped pendulum is a fascinating example of nonlinear dynamics, exhibiting behavior that ranges from simple periodic motion to chaotic oscillations. This system is governed by the interplay of damping, restoring forces, and external periodic driving, making it a crucial model for understanding diverse physical and engineering systems. Applications include energy harvesting, mechanical resonance, and vibration control.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#theoretical-foundation","text":"The equation governing a forced damped pendulum is given by: $[ \\frac{d^2\\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\omega_0^2 \\sin(\\theta) = A \\cos(\\Omega t) $] where: - \\(\\theta\\) is the angular displacement, - \\(\\beta\\) is the damping coefficient, - \\(\\omega_0^2 = g/L\\) is the natural frequency of the pendulum, - \\(A\\) is the amplitude of the external driving force, - \\(\\Omega\\) is the driving frequency. For small angles ( \\(\\theta \\approx \\sin(\\theta)\\) ), the equation simplifies to: $[ \\frac{d^2\\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\Omega t) $] This approximation allows us to analyze resonance and stability conditions.","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#analysis-of-dynamics","text":"To explore the system's dynamics, we numerically solve the equation for various values of \\(\\beta\\) , \\(A\\) , and \\(\\Omega\\) .","title":"Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#key-features","text":"Resonance : When \\(\\Omega \\approx \\omega_0\\) , the pendulum experiences maximum amplitude oscillations. Damping Effects : Higher \\(\\beta\\) leads to reduced oscillations and eventual stabilization. Chaotic Behavior : For large \\(A\\) and specific \\(\\Omega\\) , the pendulum exhibits sensitive dependence on initial conditions.","title":"Key Features:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#implementation","text":"A Python script is developed using the Runge-Kutta method to solve the differential equation numerically. The results are visualized using phase diagrams, Poincar\u00e9 sections, and bifurcation plots.","title":"Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#advanced-python-script-with-animation","text":"import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation from scipy.integrate import solve_ivp from IPython.display import HTML # Define the equation of motion def forced_damped_pendulum(t, y, beta, omega0, A, Omega): theta, omega = y dtheta_dt = omega domega_dt = -beta * omega - omega0**2 * np.sin(theta) + A * np.cos(Omega * t) return [dtheta_dt, domega_dt] # Parameters beta = 0.5 # Damping coefficient omega0 = 1.0 # Natural frequency A = 1.2 # Driving amplitude Omega = 0.8 # Driving frequency t_span = (0, 50) t_eval = np.linspace(0, 50, 1000) # Initial conditions theta0 = 0.2 omega0_init = 0.0 sol = solve_ivp(forced_damped_pendulum, t_span, [theta0, omega0_init], t_eval=t_eval, args=(beta, omega0, A, Omega)) theta_vals = sol.y[0] length = 1.0 # Length of pendulum x_vals = length * np.sin(theta_vals) y_vals = -length * np.cos(theta_vals) fig, ax = plt.subplots(figsize=(5, 5)) ax.set_xlim(-1.2, 1.2) ax.set_ylim(-1.2, 1.2) ax.set_aspect('equal') ax.set_xticks([]) ax.set_yticks([]) ax.set_title('Forced Damped Pendulum Animation') line, = ax.plot([], [], 'o-', lw=2, markersize=10, markerfacecolor='red') def init(): line.set_data([], []) return line, def update(frame): line.set_data([0, x_vals[frame]], [0, y_vals[frame]]) return line, ani = animation.FuncAnimation(fig, update, frames=len(x_vals), init_func=init, interval=30, blit=True) HTML(ani.to_jshtml()) colab","title":"Advanced Python Script with Animation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#advanced-visualizations","text":"Phase Portraits : Plot \\(\\omega\\) vs. \\(\\theta\\) to observe stability and attractors. Poincar\u00e9 Sections : Identify chaotic behavior by sampling at integer multiples of the driving period. Bifurcation Diagrams : Examine transitions from periodic to chaotic motion by varying parameters.","title":"Advanced Visualizations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#practical-applications","text":"Energy Harvesting : Understanding resonance conditions for maximizing energy extraction. Vibration Control : Engineering applications in bridges and buildings to mitigate oscillatory forces. Nonlinear Circuit Analysis : Electrical analogs using RLC circuits with periodic driving.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#conclusion","text":"The forced damped pendulum is an excellent system for studying nonlinear dynamics, resonance, and chaos. By using numerical methods, we gain deeper insights into the effects of forcing and damping, bridging theoretical physics with real-world applications.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#future-work","text":"Incorporating nonlinear damping effects. Studying the impact of non-periodic or stochastic driving forces. Extending analysis to coupled pendulum systems. ```","title":"Future Work"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}